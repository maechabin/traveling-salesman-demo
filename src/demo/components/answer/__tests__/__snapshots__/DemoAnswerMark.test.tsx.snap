// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DemoAnswerMark /> answerWaypointOrder„Åå[0, 1, 2, 3, 4, 5, 6, 7]„ÅÆÂ†¥Âêà„ÄÅ„ÄåÊ≠£ Ëß£„Äç„ÅåË°®Á§∫„Åï„Çå„Çã„Åì„Å® 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DemoAnswerMark
    answerWaypointOrder={
      Array [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <React.Fragment>
        üòÉ
        <span>
          Ê≠£ Ëß£
        </span>
      </React.Fragment>,
      "className": "DemoAnswerMark",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          "üòÉ",
          <span>
            Ê≠£ Ëß£
          </span>,
        ],
      },
      "ref": null,
      "rendered": Array [
        "üòÉ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Ê≠£ Ëß£",
          },
          "ref": null,
          "rendered": "Ê≠£ Ëß£",
          "type": "span",
        },
      ],
      "type": Symbol(react.fragment),
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <React.Fragment>
          üòÉ
          <span>
            Ê≠£ Ëß£
          </span>
        </React.Fragment>,
        "className": "DemoAnswerMark",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            "üòÉ",
            <span>
              Ê≠£ Ëß£
            </span>,
          ],
        },
        "ref": null,
        "rendered": Array [
          "üòÉ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Ê≠£ Ëß£",
            },
            "ref": null,
            "rendered": "Ê≠£ Ëß£",
            "type": "span",
          },
        ],
        "type": Symbol(react.fragment),
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<DemoAnswerMark /> answerWaypointOrder„Åås[0, 1, 2, 3, 4, 5, 6, 7]„Åß„Å™„ÅÑÂ†¥Âêà„ÄÅ„ÄåÊÆã Âøµ„Äç„ÅåË°®Á§∫„Åï„Çå„Çã„Åì„Å® 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DemoAnswerMark
    answerWaypointOrder={
      Array [
        1,
        0,
        3,
        4,
        7,
        2,
        5,
        6,
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <React.Fragment>
        üò£
        <span>
          ÊÆã Âøµ
        </span>
      </React.Fragment>,
      "className": "DemoAnswerMark",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          "üò£",
          <span>
            ÊÆã Âøµ
          </span>,
        ],
      },
      "ref": null,
      "rendered": Array [
        "üò£",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "ÊÆã Âøµ",
          },
          "ref": null,
          "rendered": "ÊÆã Âøµ",
          "type": "span",
        },
      ],
      "type": Symbol(react.fragment),
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <React.Fragment>
          üò£
          <span>
            ÊÆã Âøµ
          </span>
        </React.Fragment>,
        "className": "DemoAnswerMark",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            "üò£",
            <span>
              ÊÆã Âøµ
            </span>,
          ],
        },
        "ref": null,
        "rendered": Array [
          "üò£",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "ÊÆã Âøµ",
            },
            "ref": null,
            "rendered": "ÊÆã Âøµ",
            "type": "span",
          },
        ],
        "type": Symbol(react.fragment),
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<DemoAnswerMark /> answerWaypointOrder„ÅåÁ©∫„ÅÆÂ†¥Âêà„ÄÅ‰Ωï„ÇÇË°®Á§∫„Åï„Çå„Å™„ÅÑ„Åì„Å® 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DemoAnswerMark
    answerWaypointOrder={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <React.Fragment />,
      "className": "DemoAnswerMark",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": Symbol(react.fragment),
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <React.Fragment />,
        "className": "DemoAnswerMark",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": Symbol(react.fragment),
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
